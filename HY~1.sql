commit;

DROP TABLE TB_MOVIE CASCADE CONSTRAINTS;

DROP TABLE TB_MOVIE_SCHEDULE;
DROP TABLE TB_SCREEN CASCADE CONSTRAINTS;
DROP TABLE TB_SCREEN;

desc TB_MOVIE_SCHEDULE;

CREATE TABLE TB_MOVIE (
	MOVIE_CODE	NUMBER NOT NULL PRIMARY KEY,
	MOVIE_TITLE	VARCHAR2(60) NOT NULL,
	GENRE VARCHAR2(20) NULL,
	SUMMARY	VARCHAR2(1500) NULL,
	RUNNING_TIME NUMBER	NULL,
	RATING	VARCHAR2(5)	NOT NULL,
	OPENED_DATE	VARCHAR2(30) NULL,
    STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL 
);

ALTER TABLE TB_MOVIE MODIFY (SUMMARY VARCHAR2(1000));

CREATE TABLE TB_MOVIE_SCHEDULE (
	SCREENING_ID NUMBER	NOT NULL PRIMARY KEY,
	SCREEN_CODE	NUMBER NOT NULL,
    THEATER_CODE VARCHAR(20)NOT NULL,
	STARTTIME VARCHAR(10) NOT NULL,
	ENDTIME	VARCHAR(10)	NOT NULL,
	STARTDATE VARCHAR(14) NOT NULL,
	ENDDATE	VARCHAR(14)	NOT NULL,
	MOVIE_CODE	NUMBER NOT NULL
);


CREATE TABLE TB_THEATER (
	THEATER_CODE VARCHAR(10) NOT NULL PRIMARY KEY,
	THEATER_NAME VARCHAR(20) NULL,
	THEATER_ADDR VARCHAR(100) NULL,
	LOCATION_X NUMBER NULL,
	LOCATION_Y NUMBER NULL
);

CREATE TABLE TB_SCREEN (
	SCREEN_CODE	NUMBER NOT NULL PRIMARY KEY,
	SEAT NUMBER	NOT NULL
);

-- TB_MOVIE_SCHEDULE의 MOVIE_CODE가 TB_MOVIE의 MOVIE_CODE를 참조
ALTER TABLE TB_MOVIE_SCHEDULE
ADD CONSTRAINT fk_movie_code
FOREIGN KEY (MOVIE_CODE)
REFERENCES TB_MOVIE(MOVIE_CODE)
ON DELETE CASCADE;

--WHEN (NEW.STATUS = 'N'): 새 STATUS 값이 'N'인 경우에만 트리거가 실행
CREATE OR REPLACE TRIGGER trg_movie_status_update
AFTER UPDATE OF STATUS ON TB_MOVIE
FOR EACH ROW
WHEN (NEW.STATUS = 'N')
BEGIN
    DELETE FROM TB_MOVIE_SCHEDULE
    WHERE MOVIE_CODE = :NEW.MOVIE_CODE;
END;
/

-- TB_SCREEN의 THEATER_CODE가 TB_THEATER의 THEATER_CODE를 참조
ALTER TABLE TB_SCREEN
ADD CONSTRAINT FK_SCREEN_THEATER
FOREIGN KEY (THEATER_CODE)
REFERENCES TB_THEATER(THEATER_CODE);

-- TB_MOVIE_SCHEDULE의 SCREEN_CODE가 TB_SCREEN의 SCREEN_CODE를 참조
ALTER TABLE TB_MOVIE_SCHEDULE
ADD CONSTRAINT FK_MOVIE_SCHEDULE_SCREEN
FOREIGN KEY (SCREEN_CODE)
REFERENCES TB_SCREEN(SCREEN_CODE);


ALTER TABLE TB_MOVIE_SCHEDULE DROP CONSTRAINT FK_MOVIE_SCHEDULE_MOVIE;



INSERT ALL
    INTO TB_SCREEN (SCREEN_CODE, SEAT) VALUES (1, 150)
    INTO TB_SCREEN (SCREEN_CODE, SEAT) VALUES (2, 150)
    INTO TB_SCREEN (SCREEN_CODE, SEAT) VALUES (3, 150)
    
SELECT * FROM DUAL;

DROP TABLE TB_SCREEN;


            
SELECT
        MOVIE_CODE,
        MOVIE_TITLE,
        GENRE,
        SUMMARY,
        DIRECTOR,
        ACTOR,
        RUNNING_TIME,
        RATING,
        POSTER_URL,
        OPENED_DATE
FROM
        TB_MOVIE;


ALTER TABLE TB_MOVIE
DROP COLUMN DIRECTOR;

ALTER TABLE TB_MOVIE
DROP COLUMN ACTOR;

ALTER TABLE TB_MOVIE
DROP COLUMN POSTER_URL;


ALTER TABLE TB_SCREEN
DROP COLUMN THEATER_CODE;

ALTER TABLE TB_SCREEN
DROP COLUMN SCREEN_NO;

ALTER TABLE TB_TICKETLIST
DROP COLUMN POSTER_URL;

ALTER TABLE TB_TICKETLIST
DROP COLUMN MOVIE_TITLE;

ALTER TABLE TB_TICKETLIST
DROP COLUMN MOVIE_CODE;

ALTER TABLE TB_TICKETLIST
DROP COLUMN THEATER_CODE;

ALTER TABLE TB_TICKETLIST
DROP COLUMN SCREEN_CODE;

ALTER TABLE TB_TICKETLIST RENAME COLUMN STRATDATE TO TICKET_DATE;

ALTER TABLE TB_TICKETLIST
ADD COLUMN SCREENING_ID INT;

ALTER TABLE TB_MOVIE
ADD COLUMN STATUS VARCHAR(2);

commit;

SELECT
		   SCREENING_ID,
		   SCREEN_CODE,
		   STARTTIME,
		   ENDTIME,
		   STARTDATE,
		   ENDDATE,
		   MOVIE_CODE,
		   THEATER_CODE
	  FROM
	  	   TB_MOVIE_SCHEDULE
	 WHERE
	 	   MOVIE_CODE = 
	   AND
	   	   THEATER_CODE = 'TH003'
	   AND
	   	   '2023-07-01' BETWEEN STARTDATE AND ENDDATE;


SELECT 
    	   COUNT(*) AS schedule_count
	  FROM 
	       TB_MOVIE_SCHEDULE MS
	  JOIN 
	       TB_SCREEN S ON MS.SCREEN_CODE = S.SCREEN_CODE
	  JOIN 
	       TB_THEATER T ON MS.THEATER_CODE = T.THEATER_CODE
	  WHERE 
	       T.THEATER_CODE = 'TH001'
	       AND MS.SCREEN_CODE = 1
	       AND (
	      		('2023-07-01' < MS.ENDDATE AND '2023-07-01' > MS.STARTDATE) OR
	        	('2023-07-01' = MS.STARTDATE AND '12:00' < MS.ENDTIME) OR
	        	('2023-07-01' = MS.ENDDATE AND '10:00' > MS.STARTTIME) OR
	        	(MS.STARTDATE BETWEEN '2023-07-01' AND '2023-07-01') OR
	        	(MS.ENDDATE BETWEEN '2023-07-01' AND '2023-07-01')
	    	);
		

SELECT
       SCREENING_ID,
       SCREEN_CODE,
       STARTTIME,
       ENDTIME,
       STARTDATE, 
       ENDDATE,
       MOVIE_CODE,
       THEATER_CODE
  FROM
       TB_MOVIE_SCHEDULE
 WHERE
       MOVIE_CODE = 938614
   AND
       THEATER_CODE = 'TH002'
   AND 
       '2023-07-19' BETWEEN STARTDATE AND ENDDATE
    ;